/* 
https://oj.uz/submission/292972
https://oj.uz/submissions?handle=tmwilliamlin168&problem=

https://www.youtube.com/watch?v=kCqf6dvadlQ
https://www.hackerrank.com/contests

https://atcoder.jp/contests/

*/


#include "shortcut.h"
#include <bits/stdc++.h>
using namespace std;
 
#define ll long long
 
ll find_shortcut(int n, vector<int> l, vector<int> d, int c) {
	vector<ll> x(n);
	for(int i=0; i+1<n; ++i)
		x[i+1]=x[i]+l[i];
	vector<int> e{n-1};
	for(int i=n-2; ~i; --i)
		if(d[i]-x[i]>d[e.back()]-x[e.back()])
			e.push_back(i);
	ll lb=1, rb=2e15;
	while(lb<rb) {
		ll mb=(lb+rb)/2, a1, a2=-1e18, a3=-1e18, b1=-1e18, b2=1e18, b3=-1e18, b4=1e18;
		for(int i=n-1, j=0; ~i&&b1<=b2&&b3<=b4; --i) {
			if(j>=e.size()||i>e[j]) {
				if(d[e[j-1]]+x[e[j-1]]+d[i]-x[i]>mb) {
					b1=max(c-mb+d[e[j-1]]+x[e[j-1]]+d[i]+x[i], b1);
					b2=min(mb-c-d[e[j-1]]+x[e[j-1]]-d[i]+x[i], b2);
					b3=max(c-mb+d[e[j-1]]-x[e[j-1]]+d[i]+x[i], b3);
					b4=min(mb-c-d[e[j-1]]-x[e[j-1]]-d[i]+x[i], b4);
				}
			} else
				++j;
		}
		for(int i=e.size()-1, j=0; j<n&&b1<=b2&&b3<=b4;) {
			a1=d[j]+x[j];
			for(; ~i&&e[i]<j&&a1+d[e[i]]-x[e[i]]>mb; --i) {
				a2=max(d[e[i]]+x[e[i]], a2);
				a3=max(d[e[i]]-x[e[i]], a3);
			}
			b1=max(c-mb+a1+a2, b1);
			b2=min(mb-c-d[j]+x[j]-a3, b2);
			b3=max(c-mb+d[j]-x[j]+a2, b3);
			b4=min(mb-c-a1-a3, b4);
			for(int k=j; ++j<n&&d[j]+x[j]<a1;) {
				if(d[j]+x[j]+d[k]-x[k]>mb) {
					b1=max(c-mb+d[j]+x[j]+a1, b1);
					b2=min(mb-c-d[j]+x[j]-d[k]+x[k], b2);
					b3=max(c-mb+d[j]-x[j]+a1, b3);
					b4=min(mb-c-d[j]-x[j]-d[k]+x[k], b4);
				}
			}
		}
		bool ok=0;
		if(b1<=b2&&b3<=b4) {
			for(int i=0, j1=n, j2=n, j3=0, j4=0; i<n&&!ok; ++i) {
				for(; j1&&x[j1-1]>=b1-x[i]; --j1);
				for(; j2&&x[j2-1]>b2-x[i]; --j2);
				for(; j3<n&&x[j3]<b3+x[i]; ++j3);
				for(; j4<n&&x[j4]<=b4+x[i]; ++j4);
				ok|=max(j1, j3)<min(j2, j4);
			}
		}
		if(ok)
			rb=mb;
		else
			lb=mb+1;
	}
	return lb;
}

//https://oj.uz/submission/292254

#include "railroad.h"
#include <bits/stdc++.h>
using namespace std;
 
const int mxN=4e5;
int a[mxN], p[mxN];
array<int, 2> e[mxN];
 
int find(int x) {
	return x^p[x]?p[x]=find(p[x]):x;
}
 
bool join(int x, int y) {
	if((x=find(x))==(y=find(y)))
		return 0;
	p[x]=y;
	return 1;
}
 
long long plan_roller_coaster(vector<int> s, vector<int> t) {
	int n=s.size();
	vector<int> x=s;
	x.insert(x.end(), t.begin(), t.end());
	sort(x.begin(), x.end());
	iota(p, p+x.size(), 0);
	for(int i=0; i<n; ++i) {
		s[i]=lower_bound(x.begin(), x.end(), s[i])-x.begin();
		t[i]=lower_bound(x.begin(), x.end(), t[i])-x.begin();
		++a[s[i]];
		--a[t[i]];
		join(s[i], t[i]);
	}
	long long ans=0;
	for(int i=0; i+1<x.size(); ++i) {
		a[i+1]+=a[i];
		ans+=(long long)(x[i+1]-x[i])*max(a[i]-1, 0);
		if(a[i]^1)
			join(i, i+1);
		e[i]={x[i+1]-x[i], i};
	}
	sort(e, e+x.size()-1);
	for(int i=0; i<x.size()-1; ++i)
		if(join(e[i][1], e[i][1]+1))
			ans+=e[i][0];
	return ans;
}


// https://oj.uz/submission/294368

#include "paint.h"
#include <bits/stdc++.h>
using namespace std;
 
const int mxN=2e5, mxK=100;
int n, k, a[mxN+1], b1[mxN], b2[mxN+1];
bool dp1[mxN+1][mxK+1], dp2[mxN+1][mxK+1];
 
string solve_puzzle(string s, vector<int> c) {
	n=s.size();
	k=c.size();
	for(int i=0; i<n; ++i)
		a[i+1]=a[i]+(s[i]=='_');
	dp1[0][0]=dp2[n][k]=1;
	for(int i=0; i<n; ++i) {
		for(int j=0; j<=k; ++j) {
			if(s[i]^'X')
				dp1[i+1][j]|=dp1[i][j];
			if(j<k&&i+c[j]<n&&s[i+c[j]]^'X'&&a[i+c[j]]==a[i])
				dp1[i+c[j]+1][j+1]|=dp1[i][j];
		}
	}
	for(int i=n; i; --i) {
		for(int j=0; j<=k; ++j) {
			if(s[i-1]^'X')
				dp2[i-1][j]|=dp2[i][j];
			if(j&&i-c[j-1]>0&&s[i-c[j-1]-1]^'X'&&a[i]==a[i-c[j-1]])
				dp2[i-c[j-1]-1][j-1]|=dp2[i][j];
		}
	}
	for(int i=0; i<n; ++i) {
		for(int j=0; j<=k; ++j)
			b1[i]|=dp1[i+1][j]&&dp2[i][j];
		for(int j=0; j<k; ++j) {
			if(i+c[j]<=n&&dp1[i][j]&&dp2[i+c[j]][j+1]&&a[i+c[j]]==a[i]) {
				++b2[i];
				--b2[i+c[j]];
			}
		}
		b2[i+1]+=b2[i];
		s[i]=(b1[i]&&b2[i]?'?':b1[i]?'_':'X');
	}
    return s;